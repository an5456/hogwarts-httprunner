{
  "uid" : "1300fa3cb780308e",
  "name" : "test_get_login_submit",
  "fullName" : "test_testcase.TestSingle#test_get_login_submit",
  "historyId" : "9d45b30fd97667aff13f3a162735a3a9",
  "time" : {
    "start" : 1576601640913,
    "stop" : 1576601641304,
    "duration" : 391
  },
  "description" : " 呵呵呵呵1234",
  "descriptionHtml" : "<p>呵呵呵呵1234</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
  "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x1022c41d0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            # logger.info(ass[\"url\"])\n            # logger.info(\"\\033[1;31m=======Assert=====\\033[0m\")\n            # logger.info(\"\\033[1;36mexpected:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            # logger.info(\"\\033[1;32mactual:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            logger.info(ass[\"url\"])\n            logger.info(\"=======Assert=====\")\n            logger.info(\"expected:\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            logger.info(\"actual:\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            try:\n>               assert ass[\"expected\"] == ass[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:78: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_testcase.TestSingle object at 0x1022c41d0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            # logger.info(ass[\"url\"])\n            # logger.info(\"\\033[1;31m=======Assert=====\\033[0m\")\n            # logger.info(\"\\033[1;36mexpected:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            # logger.info(\"\\033[1;32mactual:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            logger.info(ass[\"url\"])\n            logger.info(\"=======Assert=====\")\n            logger.info(\"expected:\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            logger.info(\"actual:\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            try:\n                assert ass[\"expected\"] == ass[\"actual\"]\n            except AssertionError:\n>               assert ass[\"expected\"] == ass[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:80: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Module__pytest_setup_module",
    "time" : {
      "start" : 1576601639659,
      "stop" : 1576601639659,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1576601639659,
      "stop" : 1576601639659,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : " 呵呵呵呵1234",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
    "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x1022c41d0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            # logger.info(ass[\"url\"])\n            # logger.info(\"\\033[1;31m=======Assert=====\\033[0m\")\n            # logger.info(\"\\033[1;36mexpected:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            # logger.info(\"\\033[1;32mactual:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            logger.info(ass[\"url\"])\n            logger.info(\"=======Assert=====\")\n            logger.info(\"expected:\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            logger.info(\"actual:\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            try:\n>               assert ass[\"expected\"] == ass[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:78: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <tests.test_testcase.TestSingle object at 0x1022c41d0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            # logger.info(ass[\"url\"])\n            # logger.info(\"\\033[1;31m=======Assert=====\\033[0m\")\n            # logger.info(\"\\033[1;36mexpected:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            # logger.info(\"\\033[1;32mactual:\\033[0m\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            logger.info(ass[\"url\"])\n            logger.info(\"=======Assert=====\")\n            logger.info(\"expected:\" + '\\n\\t' + \"{}={}\".format(\"expected\", ass[\"expected\"]))\n            logger.info(\"actual:\" + '\\n\\t' + \"{}={}\".format(\"actual\", ass[\"actual\"]))\n            try:\n                assert ass[\"expected\"] == ass[\"actual\"]\n            except AssertionError:\n>               assert ass[\"expected\"] == ass[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:80: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "dc2e122604a4f150",
      "name" : "log",
      "source" : "dc2e122604a4f150.txt",
      "type" : "text/plain",
      "size" : 1964
    }, {
      "uid" : "f345a9d1d7a30e9c",
      "name" : "stdout",
      "source" : "f345a9d1d7a30e9c.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "d75d1a7d57b602e2",
      "name" : "stderr",
      "source" : "d75d1a7d57b602e2.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Module__pytest_setup_module::0",
    "time" : {
      "start" : 1576601641788,
      "stop" : 1576601641788,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1576601641786,
      "stop" : 1576601641786,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试3"
  }, {
    "name" : "feature",
    "value" : "测试接口"
  }, {
    "name" : "suite",
    "value" : "test_testcase"
  }, {
    "name" : "subSuite",
    "value" : "TestSingle"
  }, {
    "name" : "host",
    "value" : "anxiaodongdeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "6549-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_testcase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "1300fa3cb780308e.json",
  "parameterValues" : [ ]
}