{
  "uid" : "f99829b23fc727ce",
  "name" : "test_get_login_submit",
  "fullName" : "test_testcase.TestSingle#test_get_login_submit",
  "historyId" : "9d45b30fd97667aff13f3a162735a3a9",
  "time" : {
    "start" : 1576684308031,
    "stop" : 1576684308411,
    "duration" : 380
  },
  "description" : " 呵呵呵呵1234",
  "descriptionHtml" : "<p>呵呵呵呵1234</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
  "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x10bbc3be0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            logger.info(\"url:\"+ass[\"url\"])\n            logger.info(\"method:\"+ass[\"method\"])\n            logger.info(\"----------------\"+\"Assert\"+\"------------------\")\n            for vale in ass[\"data\"]:\n    \n                logger.info(\"{} expected:{} actual:{}\".format(vale[\"key\"], vale[\"expected\"], vale[\"actual\"]))\n>               assert vale[\"expected\"] == vale[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:68: AssertionError",
  "flaky" : true,
  "beforeStages" : [ {
    "name" : "_Module__pytest_setup_module",
    "time" : {
      "start" : 1576684307061,
      "stop" : 1576684307061,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1576684307062,
      "stop" : 1576684307062,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : " 呵呵呵呵1234",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
    "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x10bbc3be0>\n\n    @allure.story(\"测试3\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n        single_testcase_yaml = os.path.join(os.path.dirname(__file__), \"api\", \"get_login_submit.yml\")\n    \n        result = self.run.run_yml(single_testcase_yaml)\n        logger.info(\"666666666\"+str(result))\n        for ass in result[0]:\n            logger.info(\"url:\"+ass[\"url\"])\n            logger.info(\"method:\"+ass[\"method\"])\n            logger.info(\"----------------\"+\"Assert\"+\"------------------\")\n            for vale in ass[\"data\"]:\n    \n                logger.info(\"{} expected:{} actual:{}\".format(vale[\"key\"], vale[\"expected\"], vale[\"actual\"]))\n>               assert vale[\"expected\"] == vale[\"actual\"]\nE               AssertionError: assert '2' == '0'\nE                 - 2\nE                 + 0\n\ntest_testcase.py:68: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d653856ca4e97399",
      "name" : "log",
      "source" : "d653856ca4e97399.txt",
      "type" : "text/plain",
      "size" : 3974
    }, {
      "uid" : "bfd8405aa846e04",
      "name" : "stdout",
      "source" : "bfd8405aa846e04.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "43251fbe80386f2f",
      "name" : "stderr",
      "source" : "43251fbe80386f2f.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Module__pytest_setup_module::0",
    "time" : {
      "start" : 1576684308871,
      "stop" : 1576684308871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1576684308871,
      "stop" : 1576684308871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "测试3"
  }, {
    "name" : "feature",
    "value" : "测试接口"
  }, {
    "name" : "suite",
    "value" : "test_testcase"
  }, {
    "name" : "subSuite",
    "value" : "TestSingle"
  }, {
    "name" : "host",
    "value" : "anxiaodongdeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "12213-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_testcase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "70db9b13fd34069f",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576683680460,
        "stop" : 1576683680810,
        "duration" : 350
      }
    }, {
      "uid" : "c33e6eb80e1815b4",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576678928200,
        "stop" : 1576678928547,
        "duration" : 347
      }
    }, {
      "uid" : "29b0404e9dd80397",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576602519261,
        "stop" : 1576602519626,
        "duration" : 365
      }
    }, {
      "uid" : "88fb7d4eef2d7eab",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576602392404,
        "stop" : 1576602392727,
        "duration" : 323
      }
    }, {
      "uid" : "3726c5bf7c446368",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576602247712,
        "stop" : 1576602248047,
        "duration" : 335
      }
    }, {
      "uid" : "f293441146d5d2de",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576602076314,
        "stop" : 1576602076619,
        "duration" : 305
      }
    }, {
      "uid" : "71a5b7a981ba621f",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601905094,
        "stop" : 1576601905455,
        "duration" : 361
      }
    }, {
      "uid" : "3e910db63e369a22",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601746280,
        "stop" : 1576601746628,
        "duration" : 348
      }
    }, {
      "uid" : "ab0733cab672c0cf",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601640913,
        "stop" : 1576601641304,
        "duration" : 391
      }
    }, {
      "uid" : "8d0e73f20d32ffc5",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601438853,
        "stop" : 1576601439220,
        "duration" : 367
      }
    }, {
      "uid" : "8722c35f8c4ddaf9",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601265244,
        "stop" : 1576601265596,
        "duration" : 352
      }
    }, {
      "uid" : "d177ede051506a09",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601145474,
        "stop" : 1576601145833,
        "duration" : 359
      }
    }, {
      "uid" : "26e7c5cfaf6956dd",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576601038760,
        "stop" : 1576601039124,
        "duration" : 364
      }
    }, {
      "uid" : "25e0c8d159fcaa50",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576600899218,
        "stop" : 1576600899582,
        "duration" : 364
      }
    }, {
      "uid" : "13d0b81dd8494df7",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576600512825,
        "stop" : 1576600513193,
        "duration" : 368
      }
    }, {
      "uid" : "f81676a0064ef866",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert '2' == '0'\n  - 2\n  + 0",
      "time" : {
        "start" : 1576599528528,
        "stop" : 1576599528889,
        "duration" : 361
      }
    }, {
      "uid" : "a859dcbb76375e4d",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert False == True",
      "time" : {
        "start" : 1576595909341,
        "stop" : 1576595909711,
        "duration" : 370
      }
    }, {
      "uid" : "281d347bb86824f4",
      "status" : "passed",
      "time" : {
        "start" : 1576423780915,
        "stop" : 1576423781308,
        "duration" : 393
      }
    }, {
      "uid" : "8b4ac90043522b",
      "status" : "passed",
      "time" : {
        "start" : 1576376345324,
        "stop" : 1576376345700,
        "duration" : 376
      }
    }, {
      "uid" : "f1c019d2013ed49a",
      "status" : "passed",
      "time" : {
        "start" : 1576376213776,
        "stop" : 1576376214109,
        "duration" : 333
      }
    }, {
      "uid" : "dbe6aab59590605b",
      "status" : "passed",
      "time" : {
        "start" : 1576375920045,
        "stop" : 1576375920500,
        "duration" : 455
      }
    }, {
      "uid" : "ae6e5bb83898e391",
      "status" : "passed",
      "time" : {
        "start" : 1576375524339,
        "stop" : 1576375524669,
        "duration" : 330
      }
    }, {
      "uid" : "35a3bdd76faa09be",
      "status" : "passed",
      "time" : {
        "start" : 1576337568803,
        "stop" : 1576337569223,
        "duration" : 420
      }
    }, {
      "uid" : "bf8c82cc94010c1e",
      "status" : "passed",
      "time" : {
        "start" : 1576337554370,
        "stop" : 1576337556488,
        "duration" : 2118
      }
    }, {
      "uid" : "a85c5e426885591f",
      "status" : "passed",
      "time" : {
        "start" : 1576337379737,
        "stop" : 1576337380149,
        "duration" : 412
      }
    }, {
      "uid" : "3ada39b60ff079a7",
      "status" : "passed",
      "time" : {
        "start" : 1576337313876,
        "stop" : 1576337314304,
        "duration" : 428
      }
    }, {
      "uid" : "dabe965603c974f5",
      "status" : "passed",
      "time" : {
        "start" : 1576337291705,
        "stop" : 1576337292103,
        "duration" : 398
      }
    }, {
      "uid" : "c6a36f9fb39dbad5",
      "status" : "passed",
      "time" : {
        "start" : 1576337217196,
        "stop" : 1576337217593,
        "duration" : 397
      }
    }, {
      "uid" : "600a9def1a2d15b2",
      "status" : "passed",
      "time" : {
        "start" : 1576336675059,
        "stop" : 1576336675447,
        "duration" : 388
      }
    }, {
      "uid" : "e27bc825c23620b5",
      "status" : "passed",
      "time" : {
        "start" : 1576336484803,
        "stop" : 1576336485566,
        "duration" : 763
      }
    }, {
      "uid" : "28c87ce3b46ac907",
      "status" : "passed",
      "time" : {
        "start" : 1576336398519,
        "stop" : 1576336398971,
        "duration" : 452
      }
    }, {
      "uid" : "7d58faf7ee25d620",
      "status" : "passed",
      "time" : {
        "start" : 1576335996410,
        "stop" : 1576335996796,
        "duration" : 386
      }
    }, {
      "uid" : "bf1640ccae92068d",
      "status" : "passed",
      "time" : {
        "start" : 1576335032233,
        "stop" : 1576335032612,
        "duration" : 379
      }
    }, {
      "uid" : "df0b29b03c870e9b",
      "status" : "passed",
      "time" : {
        "start" : 1576334764111,
        "stop" : 1576334764464,
        "duration" : 353
      }
    }, {
      "uid" : "c1a6bb9c04b6f44f",
      "status" : "passed",
      "time" : {
        "start" : 1576323418029,
        "stop" : 1576323418435,
        "duration" : 406
      }
    }, {
      "uid" : "eb61481e690b901d",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323337532,
        "stop" : 1576323337688,
        "duration" : 156
      }
    }, {
      "uid" : "47dcbd49593cdfd",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323199883,
        "stop" : 1576323200225,
        "duration" : 342
      }
    }, {
      "uid" : "31b6c77c2360c68c",
      "status" : "passed",
      "time" : {
        "start" : 1576323162847,
        "stop" : 1576323163247,
        "duration" : 400
      }
    }, {
      "uid" : "f76178a5336d88b5",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323140232,
        "stop" : 1576323140619,
        "duration" : 387
      }
    }, {
      "uid" : "bdcf4c37cc6eee52",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323123224,
        "stop" : 1576323123687,
        "duration" : 463
      }
    }, {
      "uid" : "a06b0f9023675551",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323073430,
        "stop" : 1576323073878,
        "duration" : 448
      }
    }, {
      "uid" : "ffac82e2fedd7f7c",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576323038417,
        "stop" : 1576323038577,
        "duration" : 160
      }
    }, {
      "uid" : "cf34077d7cd0c20e",
      "status" : "passed",
      "time" : {
        "start" : 1576323023729,
        "stop" : 1576323024134,
        "duration" : 405
      }
    }, {
      "uid" : "fd3a8b22af3d39a4",
      "status" : "passed",
      "time" : {
        "start" : 1576322991107,
        "stop" : 1576322991467,
        "duration" : 360
      }
    }, {
      "uid" : "5dad5ce54a5a1e3b",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576322973300,
        "stop" : 1576322973471,
        "duration" : 171
      }
    }, {
      "uid" : "764d4df9ab56e8ec",
      "status" : "broken",
      "statusDetails" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
      "time" : {
        "start" : 1576322944465,
        "stop" : 1576322944855,
        "duration" : 390
      }
    }, {
      "uid" : "e944a8fbbd09722e",
      "status" : "passed",
      "time" : {
        "start" : 1576322873874,
        "stop" : 1576322874245,
        "duration" : 371
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f99829b23fc727ce.json",
  "parameterValues" : [ ]
}