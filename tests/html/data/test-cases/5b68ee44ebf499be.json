{
  "uid" : "5b68ee44ebf499be",
  "name" : "test_run_login",
  "fullName" : "test_testcase.TestSingle#test_run_login",
  "historyId" : "fea38451c2c2faeec54aa425a7c9b17c",
  "time" : {
    "start" : 1578131420955,
    "stop" : 1578131421163,
    "duration" : 208
  },
  "description" : "范德萨范德",
  "descriptionHtml" : "<p>范德萨范德</p>\n",
  "status" : "broken",
  "statusMessage" : "KeyError: 0",
  "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x10cca33c8>\n\n    @allure.story(\"测试2\")\n    def test_run_login(self):\n        \"\"\"范德萨范德\"\"\"\n>       Result.result_assert(\"api\", \"get_login.yml\")\n\ntest_testcase.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'htturunner.result_assert.Result'>, path_1 = 'api'\nfilename = 'get_login.yml'\n\n    @classmethod\n    def result_assert(cls, path_1, filename):\n        single_testcase_yaml = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"tests\", path_1, filename)\n        result = cls.run.run_yml(single_testcase_yaml)\n    \n        if len(result) > 1:\n            result1 = []\n            if isinstance(result[0][0], list):\n                for res in result:\n                    for r in res:\n                        result = r[0]\n                        result1.append(result)\n                result = result1\n            else:\n                for res in result:\n>                   result = res[0][0]\nE                   KeyError: 0\n\n../htturunner/result_assert.py:25: KeyError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_Module__pytest_setup_module",
    "time" : {
      "start" : 1578131420096,
      "stop" : 1578131420096,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "get_log",
    "time" : {
      "start" : 1578131420095,
      "stop" : 1578131420096,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "范德萨范德",
    "status" : "broken",
    "statusMessage" : "KeyError: 0",
    "statusTrace" : "self = <tests.test_testcase.TestSingle object at 0x10cca33c8>\n\n    @allure.story(\"测试2\")\n    def test_run_login(self):\n        \"\"\"范德萨范德\"\"\"\n>       Result.result_assert(\"api\", \"get_login.yml\")\n\ntest_testcase.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'htturunner.result_assert.Result'>, path_1 = 'api'\nfilename = 'get_login.yml'\n\n    @classmethod\n    def result_assert(cls, path_1, filename):\n        single_testcase_yaml = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"tests\", path_1, filename)\n        result = cls.run.run_yml(single_testcase_yaml)\n    \n        if len(result) > 1:\n            result1 = []\n            if isinstance(result[0][0], list):\n                for res in result:\n                    for r in res:\n                        result = r[0]\n                        result1.append(result)\n                result = result1\n            else:\n                for res in result:\n>                   result = res[0][0]\nE                   KeyError: 0\n\n../htturunner/result_assert.py:25: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5b6d6d33e451e850",
      "name" : "log",
      "source" : "5b6d6d33e451e850.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "46a3181b572233fd",
      "name" : "stdout",
      "source" : "46a3181b572233fd.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "d341613c67cb4de8",
      "name" : "stderr",
      "source" : "d341613c67cb4de8.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Module__pytest_setup_module::0",
    "time" : {
      "start" : 1578131421910,
      "stop" : 1578131421910,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试接口"
  }, {
    "name" : "story",
    "value" : "测试2"
  }, {
    "name" : "suite",
    "value" : "test_testcase"
  }, {
    "name" : "subSuite",
    "value" : "TestSingle"
  }, {
    "name" : "host",
    "value" : "anxiaodongdeMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "2138-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_testcase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "5b68ee44ebf499be.json",
  "parameterValues" : [ ]
}