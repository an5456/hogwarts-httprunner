{"name": "test_get_login_submit", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <tests.test_testcase.TestSingle object at 0x10b9dfeb8>\n\n    @allure.story(\"测试登陆123\")\n    def test_get_login_submit(self):\n        \"\"\" 呵呵呵呵1234\"\"\"\n>       Result.result_assert(\"api\", \"get_login_submit.yml\")\n\ntest_testcase.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'htturunner.result_assert.Result'>, path_1 = 'api', filename = 'get_login_submit.yml'\n\n    @classmethod\n    def result_assert(cls, path_1, filename):\n        single_testcase_yaml = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"tests\", path_1, filename)\n        result = cls.run.run_yml(single_testcase_yaml)\n        for ass in result[0]:\n            if ass.get(\"csv_name\"):\n                logging.info(20 * \"=\" + ass[\"name\"] + \"--\"+ ass[\"csv_name\"] + 20 * \"=\")\n            else:\n                logging.info(20 * \"=\" + ass[\"name\"] + 20 * \"=\")\n            logging.info(\"url:\" + ass[\"url\"])\n            logging.info(\"method:\" + ass[\"method\"])\n            if ass[\"request_info\"].get(\"type\") == \"json\":\n                logging.info(\"request_data:\" + \"\\n\" + Utils.format_output(ass[\"request_data\"]))\n                logging.info(\"response_data:\" + \"\\n\" + Utils.format_output(ass[\"response_data\"]))\n            else:\n                logging.info(\"request_data:\" + str(ass[\"request_data\"]))\n                logging.info(\"response_data:\" + str(ass[\"response_data\"]))\n            logging.info(10 * \"-\" + \"Assert\" + 10 * \"-\")\n            for vale in ass[\"assert_data\"]:\n                logging.info(\"{} expected:{} actual:{}\".format(vale[\"key\"], vale[\"expected\"], vale[\"actual\"]))\n>               assert vale[\"expected\"] == vale[\"actual\"]\nE               AssertionError\n\n../htturunner/result_assert.py:30: AssertionError"}, "description": " 呵呵呵呵1234", "attachments": [{"name": "log", "source": "6d5b24c7-cd19-4fb2-bee3-f6788f64e845-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e0625319-3305-44ec-b0d6-8664226b4b22-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5a8170db-551a-4c56-84c6-c5f907af66ec-attachment.txt", "type": "text/plain"}], "start": 1577707283193, "stop": 1577707283588, "uuid": "19a38801-8b4c-41e6-b5c0-9ca188998c82", "historyId": "9d45b30fd97667aff13f3a162735a3a9", "fullName": "test_testcase.TestSingle#test_get_login_submit", "labels": [{"name": "feature", "value": "测试接口"}, {"name": "story", "value": "测试登陆123"}, {"name": "suite", "value": "test_testcase"}, {"name": "subSuite", "value": "TestSingle"}, {"name": "host", "value": "anxiaodongdeMacBook-Pro.local"}, {"name": "thread", "value": "35919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_testcase"}]}